vim.opt.shell = "/bin/zsh"
vim.opt.shiftwidth = 4
vim.opt.tabstop = 4
vim.opt.relativenumber = true
vim.opt.wrap = true
vim.keymap.set("n", "d<CR>", ":r /Users/littlepants/CP/codebook/default.cpp<CR>", { silent = true })
vim.keymap.set("n", "c<CR>", ":r /Users/littlepants/CP/codebook/", {})
vim.keymap.set("n", "y<CR>", "gg0vG4y", { silent = true })
lvim.keys.visual_block_mode['J'] = ":move '>+1<CR>gv-gv"
lvim.keys.visual_block_mode['K'] = ":move '<-2<CR>gv-gv"
lvim.keys.normal_mode["|"] = ":vsplit<CR>"
lvim.keys.normal_mode["-"] = ":split<CR>"

-- X closes a buffer
lvim.keys.normal_mode["<S-x>"] = ":BufferKill<CR>"
-- Centers cursor when moving 1/2 page down
lvim.keys.normal_mode["<C-d>"] = "<C-d>zz"
lvim.keys.normal_mode["<F5>"] = ":!g++-13 -O3 -Wall -lm -g % <CR>"

lvim.plugins = {
    {
        "phaazon/hop.nvim",
        event = "BufRead",
        config = function()
            require("hop").setup()
            vim.api.nvim_set_keymap("n", "s", ":HopChar2<cr>", { silent = true })
        end
    },
    {
        'xeluxee/competitest.nvim',
        dependencies = 'MunifTanjim/nui.nvim',
        config = function()
            require('competitest').setup {
                compile_command = {
                    cpp = { exec = 'g++-14', args = {'$(FNAME)', '-std=c++20', '-O2', '-Ddebug', '-I.'} },
                },
                run_command = {
                    cpp=  { exec = './a.out' },
                },
                testcases_directory = "/testcases"
            }
            vim.api.nvim_set_keymap("n", "<C-,>", ":CompetiTestRun<CR>", {silent = false})
            vim.api.nvim_set_keymap("n", "<C-;>", ":CompetiTestRunNC<CR>", {silent = false})
            vim.api.nvim_set_keymap("n", "<F3>", ":CompetiTestReceive testcases<CR>", {silent = false})
        end
    },
    {
        "iamcco/markdown-preview.nvim",
        config = function() vim.fn["mkdp#util#install"]() end,
    },
    {
        -- paste img plugin
        'ekickx/clipboard-image.nvim',
        config = function() 
            require('clipboard-image').setup {
                markdown = {
                    img_dir = "images",
                }
            }
        end,
    },
    {
        "nvim-lua/plenary.nvim",
        config = function()
        end,
    }
}
